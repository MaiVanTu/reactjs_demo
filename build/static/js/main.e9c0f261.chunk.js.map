{"version":3,"sources":["components/task/Add.js","components/task/SearchTask.js","components/task/Result.js","components/task/AppTask.js","App.js","serviceWorker.js","index.js"],"names":["Add","props","state","id","name","status","nextProps","task","console","log","this","setState","receviceIsDisplay","event","preventDefault","onSave","target","value","className","onClick","displayAdd","bind","onSubmit","type","onChange","required","React","Component","SearchTask","onSearch","keyword","handleKeyDown","e","key","sort","by","genarateTasks","isDisplayAdd","onSort","placeholder","onKeyDown","data-toggle","Result","changeStatus","onEdit","onDelete","element","tasks","map","index","AppTask","taskEditing","localStorage","getItem","JSON","parse","genarateID","Math","floor","random","saveAll","Date","getTime","toString","substring","s4","data","push","indexOf","splice","setItem","stringify","filter","toLowerCase","a","b","elementAddTask","receviceData","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oQAuGeA,E,YAnGX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,GAAI,GACJC,KAAO,GACPC,QAAQ,GALG,E,8FAScC,GACzBA,GAAaA,EAAUC,MACvBC,QAAQC,IAAIH,GACZI,KAAKC,SAAS,CACVR,GAAIG,EAAUC,KAAKJ,GACnBC,KAAOE,EAAUC,KAAKH,KACtBC,OAAQC,EAAUC,KAAKF,UAEpBC,GAAgC,OAAnBA,EAAUC,MAC9BG,KAAKC,SAAS,CACVR,GAAI,GACJC,KAAO,GACPC,QAAQ,M,kDAMZK,KAAKT,MAAMM,MACXG,KAAKC,SAAS,CACVR,GAAIO,KAAKT,MAAMM,KAAKJ,GACpBC,KAAOM,KAAKT,MAAMM,KAAKH,KACvBC,OAAQK,KAAKT,MAAMM,KAAKF,W,mCAMhCK,KAAKT,MAAMW,mBAAkB,K,+BAGxBC,GACLA,EAAMC,iBACkB,KAApBJ,KAAKR,MAAME,OACfM,KAAKT,MAAMc,OAAOL,KAAKR,OACvBQ,KAAKC,SAAS,CACVP,KAAO,GACPC,QAAQ,O,+BAIPQ,GACLH,KAAKC,SAAL,eACKE,EAAMG,OAAOZ,KAA6B,WAAtBS,EAAMG,OAAOZ,KAA2C,SAAvBS,EAAMG,OAAOC,MAAkCJ,EAAMG,OAAOC,U,+BAM5H,OACU,yBAAKC,UAAU,uBACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,eACU,KAAlBR,KAAKR,MAAMC,GAAY,cAAgB,cACzC,0BAAMe,UAAU,wCAAwCC,QAAST,KAAKU,WAAWC,KAAKX,UAG9F,yBAAKQ,UAAU,cACX,0BAAMI,SAAUZ,KAAKY,SAASD,KAAKX,OAC/B,yBAAKQ,UAAU,cACX,4CACA,2BACAK,KAAK,OACLL,UAAU,eACVd,KAAK,OACLoB,SAAUd,KAAKc,SAASH,KAAKX,MAC7BO,MAAOP,KAAKR,MAAME,QAEtB,yBAAKc,UAAU,cACX,yCAEA,4BACAM,SAAUd,KAAKc,SAASH,KAAKX,MAC7BN,KAAK,SACLc,UAAU,eACVO,SAAS,WACTR,MAAOP,KAAKR,MAAMG,QACd,4BAAQY,OAAO,GAAf,UACA,4BAAQA,OAAO,GAAf,cAIR,4BAAQM,KAAK,SAASL,UAAU,mBAAhC,e,GA7FNQ,IAAMC,WCmHTC,E,YAjHX,WAAY3B,GAAQ,IAAD,8BACf,4CAAMA,KAmBVuB,SAAW,SAACX,GACR,IAAIG,EAASH,EAAMG,OACfZ,EAAOY,EAAOZ,KACda,EAAQD,EAAOC,MACnB,EAAKN,SAAL,eACKP,EAAMa,KAzBI,EA6BnBY,SAAW,WACP,EAAK5B,MAAM4B,SAAS,EAAK3B,MAAM4B,UA9BhB,EAiCnBC,cAAgB,SAACC,GACC,UAAVA,EAAEC,KACF,EAAKhC,MAAM4B,SAAS,EAAK3B,MAAM4B,UAjCnC,EAAK5B,MAAQ,CACT4B,QAAQ,GACRI,KAAM,CACFC,GAAI,GACJlB,MAAM,IANC,E,6EAafP,KAAKT,MAAMmC,kB,mCAIX1B,KAAKT,MAAMW,mBAAmBF,KAAKT,MAAMoC,gB,6BAsBtCF,EAAIlB,GACPP,KAAKT,MAAMqC,OAAOH,EAAIlB,GACtBP,KAAKC,SAAS,CACVuB,KAAM,CACFC,GAAGA,EACHlB,MAAMA,O,+BAKX,IACGiB,EAASxB,KAAKR,MAAdgC,KACZ,OAEc,6BAEI,yBAAKhB,UAAU,OACX,yBAAKA,UAAU,2CACX,4BAAQK,KAAK,SAASL,UAAU,kBAAkBC,QAAST,KAAKU,WAAWC,KAAKX,OAAhF,eADJ,WAEI,4BAAQa,KAAK,SAASL,UAAU,iBAAiBC,QAAST,KAAK0B,cAAcf,KAAKX,OAAlF,mBAGR,6BACA,yBAAKQ,UAAU,OAEX,yBAAKA,UAAU,uCAEf,yBAAKA,UAAU,eACX,2BACIK,KAAK,OACLnB,KAAK,UACLc,UAAU,eACVqB,YAAY,SACZpC,GAAG,YACHqB,SAAUd,KAAKc,SACfgB,UAAW9B,KAAKqB,gBACpB,yBAAKb,UAAU,mBACf,4BAAQA,UAAU,kBAAkBC,QAAST,KAAKmB,UAC9C,0BAAMX,UAAU,mCAOxB,yBAAKA,UAAU,uCACX,yBAAKA,UAAU,YACX,4BAAQA,UAAU,kCAAkCK,KAAK,SAASkB,cAAY,YAA9E,WACA,0BAAMvB,UAAU,+BAChB,wBAAIA,UAAU,iBACV,wBAAIC,QAAST,KAAK4B,OAAOjB,KAAKX,KAAM,OAAQ,IACxC,4BAAQQ,UAAuB,SAAZgB,EAAKC,IAAgC,IAAfD,EAAKjB,MAAc,yDAA2D,4CAAvH,mBAEJ,wBAAIE,QAAST,KAAK4B,OAAOjB,KAAKX,KAAM,QAAS,IACzC,4BAAQQ,UAAuB,SAAZgB,EAAKC,KAAiC,IAAhBD,EAAKjB,MAAe,yDAA2D,4CAAxH,mBAEJ,6BACA,wBAAIE,QAAST,KAAK4B,OAAOjB,KAAKX,KAAM,SAAU,IAC1C,4BAAQQ,UAAuB,WAAZgB,EAAKC,IAAkC,IAAfD,EAAKjB,MAAc,oCAAsC,uBAApG,WAEJ,wBAAIE,QAAST,KAAK4B,OAAOjB,KAAKX,KAAM,UAAW,IAC3C,4BAAQQ,UAAuB,WAAZgB,EAAKC,KAAmC,IAAhBD,EAAKjB,MAAe,oCAAsC,uBAArG,sB,GAtGfS,IAAMC,WC2DhBe,E,qLAzDEvC,GACTO,KAAKT,MAAM0C,aAAaxC,K,6BAGrBA,GACHO,KAAKT,MAAM2C,OAAOzC,K,+BAGbA,GACLO,KAAKT,MAAM4C,SAAS1C,K,+BAGjB,IAAD,OACE2C,EAAUpC,KAAKT,MAAM8C,MAAMC,KAAI,SAACzC,EAAM0C,GACtC,OAAO,wBAAIhB,IAAKgB,GACJ,wBAAI/B,UAAU,wBAAwB+B,GACtC,wBAAI/B,UAAU,YAAYX,EAAKH,MAC/B,wBAAIc,UAAU,wBACV,0BAAMC,QAAS,EAAKwB,aAAatB,KAAK,EAAMd,EAAKJ,IAAKe,UAAWX,EAAKF,OAAS,8BAAgC,8BAC9GE,EAAKF,OAAS,SAAW,aAE9B,wBAAIa,UAAU,wBAEV,4BAAQK,KAAK,SAASL,UAAU,yBAAyBC,QAAS,EAAKyB,OAAOvB,KAAK,EAAMd,EAAKJ,KAC1F,0BAAMe,UAAU,eADpB,aAFJ,WAQI,4BAAQK,KAAK,SAASL,UAAU,wBAAwBC,QAAS,EAAK0B,SAASxB,KAAK,EAAMd,EAAKJ,KAC3F,0BAAMe,UAAU,uBADpB,oBAS1B,OACU,6BACI,2BAAOA,UAAU,oCACb,+BACI,wBAAIA,UAAU,QACV,wBAAIA,UAAU,eAAd,OACA,wBAAIA,UAAU,eAAd,QACA,wBAAIA,UAAU,eAAd,UACA,wBAAIA,UAAU,eAAd,YAGR,+BACK4B,S,GApDJpB,IAAMC,WCqNZuB,E,YAjNX,WAAYjD,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT6C,MAAQ,GACRV,cAAc,EACdc,YAAa,GACbrB,QAAQ,GACRK,GAAK,GACLlB,OAAQ,GARG,E,yFAaXmC,cAAgBA,aAAaC,QAAQ,UACrC3C,KAAKC,SAAS,CACVoC,MAAOO,KAAKC,MAAMH,aAAaC,QAAQ,c,sCAM/C,IAAIN,EAAQ,CACR,CACI5C,GAAIO,KAAK8C,aACTpD,KAAM,gBACNC,OAAQoD,KAAKC,MAAoB,IAAdD,KAAKE,UAAc,GAE1C,CACIxD,GAAIO,KAAK8C,aACTpD,KAAM,aACNC,OAAQoD,KAAKC,MAAoB,IAAdD,KAAKE,UAAc,GAE1C,CACIxD,GAAIO,KAAK8C,aACTpD,KAAM,eACNC,OAAQoD,KAAKC,MAAoB,IAAdD,KAAKE,UAAc,IAG9CjD,KAAKkD,QAAQb,K,2BAIb,OAAOU,KAAKC,OAAM,IAAIG,MAAOC,UAAUL,KAAKE,UAAUI,SAAS,IAAIC,UAAU,K,mCAI7E,OAAOtD,KAAKuD,KAAO,IAAMvD,KAAKuD,O,mCAGrBC,GACTxD,KAAKC,SAAS,CACVoC,MAAQmB,M,wCAIEA,GACVxD,KAAKR,MAAMmC,cAA2C,OAA3B3B,KAAKR,MAAMiD,YACtCzC,KAAKC,SAAS,CACV0B,cAAe,EACfc,YAAa,OAGjBzC,KAAKC,SAAS,CACV0B,aAAe6B,EACff,YAAa,S,6BAKlBe,GAAO,IACJnB,EAAUrC,KAAKR,MAAf6C,MACN,GAAgB,KAAZmB,EAAK/D,GACL+D,EAAK/D,GAAKO,KAAK8C,aACfT,EAAMoB,KAAKD,OACR,CACH,IAAIjB,EAAQF,EAAMC,KAAI,SAAShB,GAC3B,OAAOA,EAAE7B,MACViE,QAAQF,EAAK/D,IAChB4C,EAAME,GAASiB,EAEnBxD,KAAKC,SAAS,CACV0B,cAAe,IAEnB3B,KAAKkD,QAAQb,K,mCAGJ5C,GAAK,IACR4C,EAAUrC,KAAKR,MAAf6C,MACFE,EAAQF,EAAMC,KAAI,SAAShB,GAC3B,OAAOA,EAAE7B,MACViE,QAAQjE,GACX4C,EAAME,GAAO5C,QAAU0C,EAAME,GAAO5C,OACpCK,KAAKkD,QAAQb,K,6BAGV5C,GACHO,KAAKE,mBAAkB,GADhB,IAEDmC,EAAUrC,KAAKR,MAAf6C,MACFE,EAAQF,EAAMC,KAAI,SAAShB,GAC3B,OAAOA,EAAE7B,MACViE,QAAQjE,GACPgD,EAAcJ,EAAME,GACxBvC,KAAKC,SAAS,CACVwC,YAAYA,M,+BAIXhD,GAAK,IACJ4C,EAAUrC,KAAKR,MAAf6C,MACFE,EAAQF,EAAMC,KAAI,SAAShB,GAC3B,OAAOA,EAAE7B,MACViE,QAAQjE,GACXO,KAAKC,SAAS,CACVoC,MAAMA,EAAMsB,OAAOpB,EAAO,KAE9BvC,KAAKkD,QAAQb,K,+BAGRjB,GACLpB,KAAKC,SAAS,CACVmB,QAAUA,M,6BAIXK,EAAIlB,GACPT,QAAQC,IAAI0B,EAAI,MAAOlB,GACvBP,KAAKC,SAAS,CACVwB,GAAGA,EACHlB,MAAMA,M,8BAIN8B,GACJrC,KAAKC,SAAS,CACVoC,MAAOA,IAEXK,aAAakB,QAAQ,QAAShB,KAAKiB,UAAUxB,M,+BAG1C,IAAD,EAC+CrC,KAAKR,MAAhD6C,EADJ,EACIA,MAAOV,EADX,EACWA,aAAcP,EADzB,EACyBA,QAASK,EADlC,EACkCA,GAAIlB,EADtC,EACsCA,MACrCa,IACCiB,EAAQA,EAAMyB,QAAO,SAACjE,GAClB,OAAqD,IAA9CA,EAAKH,KAAKqE,cAAcL,QAAQtC,OAIpC,SAAPK,EACAY,EAAMb,MAAK,SAACwC,EAAEC,GAEV,OADAnE,QAAQC,IAAIiE,EAAG,MAAOC,GAClBD,EAAEtE,KAAOuE,EAAEvE,MAAca,EACpByD,EAAEtE,KAAOuE,EAAEvE,KAAaa,EAC1B,KAGX8B,EAAMb,MAAK,SAACwC,EAAEC,GACV,OAAID,EAAErE,OAASsE,EAAEtE,QAAgBY,EACxByD,EAAErE,OAASsE,EAAEtE,OAAeY,EAC9B,KAGf,IAAI2D,EAAiBvC,EAAe,kBAAC,EAAD,CAChCzB,kBAAmBF,KAAKE,kBAAkBS,KAAKX,MAC/CK,OAAQL,KAAKK,OAAOM,KAAKX,MACzBH,KAAMG,KAAKR,MAAMiD,cACZ,GACf,OAEc,yBAAKjC,UAAU,aAEX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,2CACX,wBAAIA,UAAU,eAAd,qBAKR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,uCAEV0D,GAIL,yBAAK1D,UAAWmB,EAAe,sCAAwC,2CAEnE,kBAAC,EAAD,CAAazB,kBAAmBF,KAAKE,kBAAkBS,KAAKX,MACxDmE,aAAcnE,KAAKmE,aAAaxD,KAAKX,MACrC2B,aAAc3B,KAAKR,MAAMmC,aACzBD,cAAe1B,KAAK0B,cAAcf,KAAKX,MACvCmB,SAAUnB,KAAKmB,SAASR,KAAKX,MAC7B4B,OAAQ5B,KAAK4B,OAAOjB,KAAKX,QAC7B,6BACA,kBAAC,EAAD,CACIqC,MAAOA,EACPJ,aAAcjC,KAAKiC,aAAatB,KAAKX,MACrCkC,OAAQlC,KAAKkC,OAAOvB,KAAKX,MACzBmC,SAAUnC,KAAKmC,SAASxB,KAAKX,e,GAtMvCgB,IAAMC,WCObmD,E,iLALb,OACE,kBAAC,EAAD,U,GAJcpD,IAAMC,WCQJoD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.e9c0f261.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Add extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: '',\r\n            name : '',\r\n            status: false\r\n        }\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(nextProps) {\r\n        if (nextProps && nextProps.task) {\r\n            console.log(nextProps);\r\n            this.setState({\r\n                id: nextProps.task.id,\r\n                name : nextProps.task.name,\r\n                status: nextProps.task.status\r\n            });\r\n        } else if (nextProps && nextProps.task === null) {\r\n            this.setState({\r\n                id: '',\r\n                name : '',\r\n                status: false\r\n            });\r\n        }\r\n    }\r\n    \r\n    UNSAFE_componentWillMount() {\r\n        if (this.props.task) {\r\n            this.setState({\r\n                id: this.props.task.id,\r\n                name : this.props.task.name,\r\n                status: this.props.task.status\r\n            });\r\n        }\r\n    }\r\n\r\n    displayAdd() {\r\n        this.props.receviceIsDisplay(false);\r\n    }\r\n\r\n    onSubmit(event) {\r\n        event.preventDefault();\r\n        if (this.state.name === '') return;\r\n        this.props.onSave(this.state);\r\n        this.setState({\r\n            name : '',\r\n            status: false\r\n        })\r\n    }\r\n\r\n    onChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.name === \"status\" ? event.target.value === \"true\" ? true : false : event.target.value\r\n        })\r\n        \r\n    }\r\n\r\n\trender() {\r\n\t\treturn (\r\n            <div className=\"panel panel-warning\">\r\n                <div className=\"panel-heading\">\r\n                    <h3 className=\"panel-title\">\r\n                        { this.state.id !== '' ? 'Update Task' : 'Create Task'}\r\n                        <span className=\"fa fa-times-circle pull-right pointer\" onClick={this.displayAdd.bind(this)}></span></h3>\r\n                    \r\n                </div>\r\n                <div className=\"panel-body\">\r\n                    <form onSubmit={this.onSubmit.bind(this)}>\r\n                        <div className=\"form-group\">\r\n                            <label>Task name</label>\r\n                            <input \r\n                            type=\"text\" \r\n                            className=\"form-control\" \r\n                            name=\"name\"\r\n                            onChange={this.onChange.bind(this)}\r\n                            value={this.state.name}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Status</label>\r\n                            \r\n                            <select\r\n                            onChange={this.onChange.bind(this)}\r\n                            name=\"status\" \r\n                            className=\"form-control\"\r\n                            required=\"required\"\r\n                            value={this.state.status}>\r\n                                <option value={true}>Active</option>\r\n                                <option value={false}>Inactive</option>\r\n                            </select>\r\n                            \r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n                \r\n\t\t);\r\n\t}\r\n}\r\nexport default Add;\r\n","import React from 'react';\r\n\r\nclass SearchTask extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            keyword:'',\r\n            sort: {\r\n                by: '',\r\n                value:1\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    genarateTasks() {\r\n        this.props.genarateTasks();\r\n    }\r\n\r\n    displayAdd() {\r\n        this.props.receviceIsDisplay(!this.props.isDisplayAdd);\r\n    }\r\n\r\n    onChange = (event) => {\r\n        var target = event.target;\r\n        var name = target.name;\r\n        var value = target.value;\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    onSearch = () => {\r\n        this.props.onSearch(this.state.keyword);\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if (e.key === 'Enter') {\r\n            this.props.onSearch(this.state.keyword);\r\n        }\r\n    }\r\n\r\n    onSort(by, value) {\r\n        this.props.onSort(by, value);\r\n        this.setState({\r\n            sort: {\r\n                by:by,\r\n                value:value\r\n            }\r\n        })\r\n    }\r\n\r\n\trender() {\r\n        var { sort } = this.state;\r\n\t\treturn (\r\n\t\t\t\t\r\n                <div>\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.displayAdd.bind(this)}>Create Task</button>&nbsp;&nbsp;\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.genarateTasks.bind(this)}>Generate Task</button>\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"row\">\r\n                        \r\n                        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                            \r\n                        <div className=\"input-group\">\r\n                            <input \r\n                                type=\"text\" \r\n                                name=\"keyword\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Search\" \r\n                                id=\"txtSearch\" \r\n                                onChange={this.onChange}\r\n                                onKeyDown={this.handleKeyDown}/>\r\n                            <div className=\"input-group-btn\">\r\n                            <button className=\"btn btn-primary\" onClick={this.onSearch}>\r\n                                <span className=\"glyphicon glyphicon-search\"></span>\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                            \r\n                        </div>\r\n                        \r\n                        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                            <div className=\"dropdown\">\r\n                                <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">Sort&nbsp;\r\n                                <span className=\"fa fa-caret-square-o-down\"></span></button>\r\n                                <ul className=\"dropdown-menu\">\r\n                                    <li onClick={this.onSort.bind(this, \"name\", 1)}>\r\n                                        <button className={sort.by === 'name' && sort.value === 1 ? \"fa fa-sort-alpha-asc pointer button-link sort-selected\" : \"fa fa-sort-alpha-asc pointer button-link\"}>&nbsp;&nbsp;A -> Z</button>\r\n                                    </li>\r\n                                    <li onClick={this.onSort.bind(this, \"name\", -1)}>\r\n                                        <button className={sort.by === \"name\" && sort.value === -1 ? \"fa fa-sort-alpha-asc pointer button-link sort-selected\" : \"fa fa-sort-alpha-asc pointer button-link\"}>&nbsp;&nbsp;Z -> A</button>\r\n                                    </li>\r\n                                    <hr/>\r\n                                    <li onClick={this.onSort.bind(this, \"status\", 1)}>\r\n                                        <button className={sort.by === \"status\" && sort.value === 1 ? \"pointer button-link sort-selected\" : \"pointer button-link\"}>Active</button>\r\n                                    </li>\r\n                                    <li onClick={this.onSort.bind(this, \"status\", -1)}>\r\n                                        <button className={sort.by === \"status\" && sort.value === -1 ? \"pointer button-link sort-selected\" : \"pointer button-link\"}>Inactive</button>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                    \r\n                    </div>\r\n                </div>\r\n                \r\n\t\t);\r\n\t}\r\n}\r\nexport default SearchTask;\r\n","import React from 'react';\r\n\r\nclass Result extends React.Component {\r\n\r\n    changeStatus(id) {\r\n        this.props.changeStatus(id);\r\n    }\r\n\r\n    onEdit(id) {\r\n        this.props.onEdit(id);\r\n    }\r\n\r\n    onDelete(id) {\r\n        this.props.onDelete(id);\r\n    }\r\n\r\n\trender() {\r\n        var element = this.props.tasks.map((task, index) => {\r\n            return <tr key={index}>\r\n                        <td className=\"col-md-1 text-center\">{index}</td>\r\n                        <td className=\"col-md-5\">{task.name}</td>\r\n                        <td className=\"col-md-2 text-center\">\r\n                            <span onClick={this.changeStatus.bind(this, task.id)} className={task.status ? \"label label-success pointer\" : \"label label-danger pointer\"}>\r\n                            {task.status ? \"Active\" : \"Inactive\"}</span>\r\n                        </td>\r\n                        <td className=\"text-center col-md-4\">\r\n                            \r\n                            <button type=\"button\" className=\"btn btn-sm btn-warning\" onClick={this.onEdit.bind(this, task.id)}>\r\n                                <span className=\"fa fa-edit\"></span>\r\n                                &nbsp;\r\n                                Edit\r\n                                </button>\r\n                            &nbsp;&nbsp;\r\n                            <button type=\"button\" className=\"btn btn-sm btn-danger\" onClick={this.onDelete.bind(this, task.id)}>\r\n                                <span className=\"fa fa-window-close\"></span>\r\n                                &nbsp;\r\n                                Delete\r\n                                </button>\r\n                            \r\n                        </td>\r\n                    </tr>\r\n        });\r\n\t\treturn (\r\n            <div>\r\n                <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                        <tr className=\"info\">\r\n                            <th className=\"text-center\">No.</th>\r\n                            <th className=\"text-center\">Name</th>\r\n                            <th className=\"text-center\">Status</th>\r\n                            <th className=\"text-center\">Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {element}\r\n                    </tbody>\r\n                </table>\r\n            </div>                \r\n\t\t);\r\n\t}\r\n}\r\nexport default Result;\r\n","import React from 'react';\r\nimport Add from './Add';\r\nimport SearchTask from './SearchTask';\r\nimport Result from './Result';\r\n\r\nclass AppTask extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasks : [],\r\n            isDisplayAdd: false,\r\n            taskEditing: {},\r\n            keyword:'',\r\n            by : '',\r\n            value: -1\r\n        }\r\n    }\r\n    \r\n    UNSAFE_componentWillMount() {\r\n        if (localStorage && localStorage.getItem(\"tasks\")) {\r\n            this.setState({\r\n                tasks: JSON.parse(localStorage.getItem(\"tasks\"))\r\n            })\r\n        }\r\n    }\r\n    \r\n    genarateTasks() {\r\n        var tasks = [\r\n            {\r\n                id: this.genarateID(),\r\n                name: 'Learn Reactjs',\r\n                status: Math.floor(Math.random()*100)%2\r\n            },\r\n            {\r\n                id: this.genarateID(),\r\n                name: 'Learn Java',\r\n                status: Math.floor(Math.random()*100)%2\r\n            },\r\n            {\r\n                id: this.genarateID(),\r\n                name: 'Learn Oracle',\r\n                status: Math.floor(Math.random()*100)%2\r\n            }\r\n        ]\r\n        this.saveAll(tasks);\r\n    }\r\n\r\n    s4() {\r\n        return Math.floor(new Date().getTime()*Math.random()).toString(16).substring(1);\r\n    }\r\n\r\n    genarateID() {\r\n        return this.s4() + '-' + this.s4();\r\n    }\r\n\r\n    receviceData(data) {\r\n        this.setState({\r\n            tasks : data\r\n        })\r\n    }\r\n\r\n    receviceIsDisplay(data) {\r\n        if (this.state.isDisplayAdd && this.state.taskEditing !== null) {\r\n            this.setState({\r\n                isDisplayAdd : true,\r\n                taskEditing: null\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isDisplayAdd : data,\r\n                taskEditing: null\r\n            })\r\n        }\r\n    }\r\n\r\n    onSave(data) {\r\n        var { tasks } = this.state;\r\n        if (data.id === '') {\r\n            data.id = this.genarateID();\r\n            tasks.push(data);\r\n        } else {\r\n            var index = tasks.map(function(e) { \r\n                return e.id; \r\n            }).indexOf(data.id);\r\n            tasks[index] = data\r\n        }\r\n        this.setState({\r\n            isDisplayAdd : false\r\n        })\r\n        this.saveAll(tasks);\r\n    }\r\n\r\n    changeStatus(id) {\r\n        var { tasks } = this.state;\r\n        var index = tasks.map(function(e) { \r\n            return e.id; \r\n        }).indexOf(id);\r\n        tasks[index].status = !tasks[index].status\r\n        this.saveAll(tasks);\r\n    }\r\n\r\n    onEdit(id) {\r\n        this.receviceIsDisplay(true);\r\n        var { tasks } = this.state;\r\n        var index = tasks.map(function(e) { \r\n            return e.id; \r\n        }).indexOf(id);\r\n        var taskEditing = tasks[index];\r\n        this.setState({\r\n            taskEditing:taskEditing\r\n        })\r\n    }\r\n\r\n    onDelete(id) {\r\n        var { tasks } = this.state;\r\n        var index = tasks.map(function(e) { \r\n            return e.id; \r\n        }).indexOf(id);\r\n        this.setState({\r\n            tasks:tasks.splice(index, 1)\r\n        })\r\n        this.saveAll(tasks);\r\n    }\r\n\r\n    onSearch(keyword) {\r\n        this.setState({\r\n            keyword : keyword\r\n        })\r\n    }\r\n\r\n    onSort(by, value) {\r\n        console.log(by, \" - \", value);\r\n        this.setState({\r\n            by:by,\r\n            value:value\r\n        })\r\n    }\r\n\r\n    saveAll(tasks) {\r\n        this.setState({\r\n            tasks: tasks\r\n        });\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n    }\r\n\r\n\trender() {\r\n        var { tasks, isDisplayAdd, keyword, by, value} = this.state;\r\n        if(keyword) {\r\n            tasks = tasks.filter((task) => {\r\n                return task.name.toLowerCase().indexOf(keyword) !== -1\r\n            })\r\n        }\r\n\r\n        if (by === 'name') {\r\n            tasks.sort((a,b) => {\r\n                console.log(a, \" - \", b);\r\n                if (a.name > b.name) return -value;\r\n                else if (a.name < b.name) return value;\r\n                return 0;\r\n            })\r\n        } else {\r\n            tasks.sort((a,b) => {\r\n                if (a.status > b.status) return -value;\r\n                else if (a.status < b.status) return value;\r\n                return 0;\r\n            })\r\n        }\r\n        var elementAddTask = isDisplayAdd ? <Add \r\n            receviceIsDisplay={this.receviceIsDisplay.bind(this)} \r\n            onSave={this.onSave.bind(this)}\r\n            task={this.state.taskEditing}\r\n            /> : '';\r\n\t\treturn (\r\n\t\t\t\t\r\n                <div className=\"container\">\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                            <h1 className=\"text-center\">Task Manegement</h1>\r\n                        </div>\r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"row\">\r\n                        <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n                            \r\n                            {elementAddTask}\r\n                            \r\n                        </div>\r\n                        \r\n                        <div className={isDisplayAdd ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\r\n                            \r\n                            <SearchTask  receviceIsDisplay={this.receviceIsDisplay.bind(this)} \r\n                                receviceData={this.receviceData.bind(this)} \r\n                                isDisplayAdd={this.state.isDisplayAdd} \r\n                                genarateTasks={this.genarateTasks.bind(this)}\r\n                                onSearch={this.onSearch.bind(this)}\r\n                                onSort={this.onSort.bind(this)}/>\r\n                            <br/>\r\n                            <Result \r\n                                tasks={tasks} \r\n                                changeStatus={this.changeStatus.bind(this)}\r\n                                onEdit={this.onEdit.bind(this)}\r\n                                onDelete={this.onDelete.bind(this)}/>\r\n                            \r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n                \r\n\t\t);\r\n\t}\r\n}\r\nexport default AppTask;\r\n","import React from 'react';\nimport '././App.css';\nimport AppTask from './components/task/AppTask'\n\nclass App extends React.Component {\n\n\trender() {\n\t\treturn (\n\t\t\t\t<AppTask/>\n\t\t);\n\t}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}